syntax = "proto3";

package api;

import "google/api/annotations.proto";
import "topup.proto";

// WithdrawService is the service managing the withdraw access.
service WithdrawService {
    // GetWithdrawFee data for current withdraw fee
    rpc GetWithdrawFee (GetWithdrawFeeRequest) returns (GetWithdrawFeeResponse) {
        option (google.api.http) = {
			get: "/api/withdraw/get-withdraw-fee"
		};
    }

    // WithdrawReq when the user clicks the withdraw
    rpc WithdrawReq (WithdrawReqRequest) returns (WithdrawReqResponse) {
        option (google.api.http) = {
			post: "/api/withdraw"
			body: "*"
		};
    }

    // ConfirmWithdraw is after supernode owner clicks the confirm or deny.
    rpc ConfirmWithdraw (ConfirmWithdrawRequest) returns (ConfirmWithdrawResponse) {
        option (google.api.http) = {
			post: "/api/withdraw/confirm"
			body: "*"
		};
    }

    rpc GetWithdrawHistory (GetWithdrawHistoryRequest) returns (GetWithdrawHistoryResponse) {
        option (google.api.http) = {
			get: "/api/withdraw/history"
		};
    }

    rpc ModifyWithdrawFee (ModifyWithdrawFeeRequest) returns (ModifyWithdrawFeeResponse) {
        option(google.api.http) = {
			put: "/api/withdraw/modify-withdraw-fee"
			body: "*"
		};
    }

    rpc GetWithdrawRequestList (GetWithdrawRequestListRequest) returns (GetWithdrawRequestListResponse) {
        option (google.api.http) = {
			get: "/api/withdraw/requests"
		};
    }
}

message GetWithdrawFeeRequest {
    // type of crypto currency
    Money money_abbr = 1;

}

message GetWithdrawFeeResponse {
    // Withdraw object.
    double withdrawFee = 1;
}

message WithdrawReqRequest {
    int64 org_id = 1;
    double amount = 2;
    string eth_address = 3;
    double available_balance = 4;
}

message WithdrawReqResponse {
    bool status = 1;
}

message ConfirmWithdrawRequest {
    int64  org_id = 1;
    bool   confirm_status = 2;
    string deny_comment = 3;
    int64  withdraw_id = 4;
}

message ConfirmWithdrawResponse {
    bool status = 1;
}

message GetWithdrawHistoryRequest {
    int64 org_id = 1;
    int64 offset = 2;
    int64 limit = 3;
    Money money_abbr = 4;
}

message WithdrawHistory {
    double amount = 1;
    string tx_sent_time = 2;
    string tx_status = 3;
	string tx_hash = 4;
    string deny_comment = 5;
}

message GetWithdrawHistoryResponse {
    int64 count = 1;
    repeated WithdrawHistory withdraw_history = 2;
}

message ModifyWithdrawFeeRequest {
    Money money_abbr = 1;
    double withdraw_fee = 2;
}

message ModifyWithdrawFeeResponse {
    bool status = 1;
}

message GetWithdrawRequestListRequest {
    int64 offset = 1;
    int64 limit = 2;
}

message WithdrawRequest {
    string user_name = 1;
    double available_token = 2;
    double amount = 3;
    int64  withdraw_id = 4;
}

message GetWithdrawRequestListResponse {
    int64 count = 1;
    repeated WithdrawRequest withdraw_request = 2;
}