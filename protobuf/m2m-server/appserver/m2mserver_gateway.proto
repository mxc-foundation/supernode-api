syntax = "proto3";

package api;

service GSGatewayService {
    rpc GetGatewayList(GetGatewayListRequest) returns (GetGatewayListResponse);
    rpc GetGatewayProfile(GetGSGatewayProfileRequest) returns (GetGSGatewayProfileResponse);
    rpc GetGatewayHistory(GetGatewayHistoryRequest) returns (GetGatewayHistoryResponse);
    rpc SetGatewayMode(SetGatewayModeRequest) returns (SetGatewayModeResponse);
}

enum GatewayMode {
    GW_INACTIVE = 0;
    GW_FREE_GATEWAYS_LIMITED = 1;
    GW_WHOLE_NETWORK = 2;
    GW_DELETED = 3;
}

message GetGatewayListRequest {
    int64 org_id = 1;
    int64 offset = 2;
    int64 limit = 3;
}

message GetGatewayListResponse {
    repeated GSGatewayProfile gw_profile = 1;
    int64 count = 2;
}

message GetGSGatewayProfileRequest {
    int64 org_id = 1;
    int64 gw_id = 2;
    int64 offset = 3;
    int64 limit = 4;
}

message GSGatewayProfile {
    int64 id = 1;
    string mac = 2;
    int64 fk_gw_ns = 3;
    int64 fk_wallet = 4;
    GatewayMode mode = 5;
    string create_at = 6;
    string last_seen_at = 7;
    int64 org_id = 8;
    string description = 9;
    string name = 10;
}

message GetGSGatewayProfileResponse {
    GSGatewayProfile gw_profile = 1;
}

message GetGatewayHistoryRequest {
    int64 org_id = 1;
    int64 gw_id = 2;
    int64 offset = 3;
    int64 limit = 4;
}

message GetGatewayHistoryResponse {
    string gw_history = 1;
}

message SetGatewayModeRequest {
    int64 org_id = 1;
    int64 gw_id = 2;
    GatewayMode gw_mode = 3;
}

message SetGatewayModeResponse {
    bool status = 1;
}