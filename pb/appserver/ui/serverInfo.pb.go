// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serverInfo.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAppserverVersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppserverVersionRequest) Reset()         { *m = GetAppserverVersionRequest{} }
func (m *GetAppserverVersionRequest) String() string { return proto.CompactTextString(m) }
func (*GetAppserverVersionRequest) ProtoMessage()    {}
func (*GetAppserverVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_386dce779fe74cf3, []int{0}
}

func (m *GetAppserverVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppserverVersionRequest.Unmarshal(m, b)
}
func (m *GetAppserverVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppserverVersionRequest.Marshal(b, m, deterministic)
}
func (m *GetAppserverVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppserverVersionRequest.Merge(m, src)
}
func (m *GetAppserverVersionRequest) XXX_Size() int {
	return xxx_messageInfo_GetAppserverVersionRequest.Size(m)
}
func (m *GetAppserverVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppserverVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppserverVersionRequest proto.InternalMessageInfo

type GetAppserverVersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppserverVersionResponse) Reset()         { *m = GetAppserverVersionResponse{} }
func (m *GetAppserverVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetAppserverVersionResponse) ProtoMessage()    {}
func (*GetAppserverVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_386dce779fe74cf3, []int{1}
}

func (m *GetAppserverVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppserverVersionResponse.Unmarshal(m, b)
}
func (m *GetAppserverVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppserverVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetAppserverVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppserverVersionResponse.Merge(m, src)
}
func (m *GetAppserverVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetAppserverVersionResponse.Size(m)
}
func (m *GetAppserverVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppserverVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppserverVersionResponse proto.InternalMessageInfo

func (m *GetAppserverVersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAppserverVersionRequest)(nil), "api.GetAppserverVersionRequest")
	proto.RegisterType((*GetAppserverVersionResponse)(nil), "api.GetAppserverVersionResponse")
}

func init() { proto.RegisterFile("serverInfo.proto", fileDescriptor_386dce779fe74cf3) }

var fileDescriptor_386dce779fe74cf3 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xf2, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c,
	0xc8, 0x94, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc,
	0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x51, 0x92, 0xe1, 0x92, 0x72,
	0x4f, 0x2d, 0x71, 0x2c, 0x28, 0x80, 0x68, 0x0e, 0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x0b, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x32, 0xe7, 0x92, 0xc6, 0x2a, 0x5b, 0x5c, 0x90, 0x9f, 0x57,
	0x9c, 0x2a, 0x24, 0xc1, 0xc5, 0x5e, 0x06, 0x11, 0x92, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82,
	0x71, 0x8d, 0x66, 0x31, 0x72, 0x09, 0x06, 0xc3, 0x9d, 0x03, 0x62, 0x65, 0x26, 0xa7, 0x0a, 0xb5,
	0x30, 0x72, 0x09, 0x63, 0x31, 0x4f, 0x48, 0x5e, 0x2f, 0xb1, 0x20, 0x53, 0x0f, 0xb7, 0x3b, 0xa4,
	0x14, 0x70, 0x2b, 0x80, 0x38, 0x45, 0x49, 0xab, 0xe9, 0xf2, 0x93, 0xc9, 0x4c, 0x2a, 0x42, 0x4a,
	0x60, 0x7f, 0x42, 0xd4, 0xe8, 0x66, 0xe6, 0xa5, 0xe5, 0xeb, 0x27, 0xc2, 0xb4, 0xe8, 0x42, 0x1d,
	0x97, 0xc4, 0x06, 0xf6, 0xba, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x03, 0xc1, 0xe4, 0x31,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerInfoServiceClient is the client API for ServerInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerInfoServiceClient interface {
	// get version
	GetAppserverVersion(ctx context.Context, in *GetAppserverVersionRequest, opts ...grpc.CallOption) (*GetAppserverVersionResponse, error)
}

type serverInfoServiceClient struct {
	cc *grpc.ClientConn
}

func NewServerInfoServiceClient(cc *grpc.ClientConn) ServerInfoServiceClient {
	return &serverInfoServiceClient{cc}
}

func (c *serverInfoServiceClient) GetAppserverVersion(ctx context.Context, in *GetAppserverVersionRequest, opts ...grpc.CallOption) (*GetAppserverVersionResponse, error) {
	out := new(GetAppserverVersionResponse)
	err := c.cc.Invoke(ctx, "/api.ServerInfoService/GetAppserverVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerInfoServiceServer is the server API for ServerInfoService service.
type ServerInfoServiceServer interface {
	// get version
	GetAppserverVersion(context.Context, *GetAppserverVersionRequest) (*GetAppserverVersionResponse, error)
}

// UnimplementedServerInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServerInfoServiceServer struct {
}

func (*UnimplementedServerInfoServiceServer) GetAppserverVersion(ctx context.Context, req *GetAppserverVersionRequest) (*GetAppserverVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppserverVersion not implemented")
}

func RegisterServerInfoServiceServer(s *grpc.Server, srv ServerInfoServiceServer) {
	s.RegisterService(&_ServerInfoService_serviceDesc, srv)
}

func _ServerInfoService_GetAppserverVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppserverVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerInfoServiceServer).GetAppserverVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ServerInfoService/GetAppserverVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerInfoServiceServer).GetAppserverVersion(ctx, req.(*GetAppserverVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServerInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ServerInfoService",
	HandlerType: (*ServerInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAppserverVersion",
			Handler:    _ServerInfoService_GetAppserverVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "serverInfo.proto",
}
