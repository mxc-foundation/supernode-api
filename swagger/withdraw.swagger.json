{
  "swagger": "2.0",
  "info": {
    "title": "withdraw.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/withdraw": {
      "post": {
        "summary": "WithdrawReq when the user clicks the withdraw",
        "operationId": "WithdrawReq",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiWithdrawReqResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiWithdrawReqRequest"
            }
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    },
    "/api/withdraw/confirm": {
      "post": {
        "summary": "ConfirmWithdraw is after supernode owner clicks the confirm or deny.",
        "operationId": "ConfirmWithdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiConfirmWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiConfirmWithdrawRequest"
            }
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    },
    "/api/withdraw/get-withdraw-fee": {
      "get": {
        "summary": "GetWithdrawFee data for current withdraw fee",
        "operationId": "GetWithdrawFee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetWithdrawFeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "moneyAbbr",
            "description": "type of crypto currency.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ETH",
              "ETH_MXC",
              "TETH"
            ],
            "default": "ETH"
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    },
    "/api/withdraw/history": {
      "get": {
        "operationId": "GetWithdrawHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetWithdrawHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "moneyAbbr",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ETH",
              "ETH_MXC",
              "TETH"
            ],
            "default": "ETH"
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    },
    "/api/withdraw/modify-withdraw-fee": {
      "put": {
        "operationId": "ModifyWithdrawFee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiModifyWithdrawFeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiModifyWithdrawFeeRequest"
            }
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    },
    "/api/withdraw/requests": {
      "get": {
        "operationId": "GetWithdrawRequestList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetWithdrawRequestListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WithdrawService"
        ]
      }
    }
  },
  "definitions": {
    "apiConfirmWithdrawRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string",
          "format": "int64"
        },
        "confirmStatus": {
          "type": "boolean",
          "format": "boolean"
        },
        "denyComment": {
          "type": "string"
        },
        "withdrawId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiConfirmWithdrawResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "apiGetWithdrawFeeResponse": {
      "type": "object",
      "properties": {
        "withdrawFee": {
          "type": "number",
          "format": "double",
          "description": "Withdraw object."
        }
      }
    },
    "apiGetWithdrawHistoryResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "withdrawHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiWithdrawHistory"
          }
        }
      }
    },
    "apiGetWithdrawRequestListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "withdrawRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiWithdrawRequest"
          }
        }
      }
    },
    "apiModifyWithdrawFeeRequest": {
      "type": "object",
      "properties": {
        "moneyAbbr": {
          "$ref": "#/definitions/apiMoney"
        },
        "withdrawFee": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiModifyWithdrawFeeResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "apiMoney": {
      "type": "string",
      "enum": [
        "ETH",
        "ETH_MXC",
        "TETH"
      ],
      "default": "ETH"
    },
    "apiWithdrawHistory": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "txSentTime": {
          "type": "string"
        },
        "txStatus": {
          "type": "string"
        },
        "txHash": {
          "type": "string"
        },
        "denyComment": {
          "type": "string"
        }
      }
    },
    "apiWithdrawReqRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "ethAddress": {
          "type": "string"
        },
        "availableBalance": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiWithdrawReqResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "apiWithdrawRequest": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "availableToken": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "withdrawId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
