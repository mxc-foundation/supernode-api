{
  "swagger": "2.0",
  "info": {
    "title": "staking.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/staking/{orgId}/activestakes": {
      "get": {
        "operationId": "GetActiveStakes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetActiveStakesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "StakingService"
        ]
      }
    },
    "/api/staking/{orgId}/history": {
      "get": {
        "operationId": "GetStakingHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiStakingHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "StakingService"
        ]
      }
    },
    "/api/staking/{orgId}/stake": {
      "post": {
        "operationId": "Stake",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiStakeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiStakeRequest"
            }
          }
        ],
        "tags": [
          "StakingService"
        ]
      }
    },
    "/api/staking/{orgId}/staking_percentage": {
      "get": {
        "operationId": "GetStakingPercentage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiStakingPercentageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "StakingService"
        ]
      }
    },
    "/api/staking/{orgId}/unstake": {
      "post": {
        "operationId": "Unstake",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUnstakeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUnstakeRequest"
            }
          }
        ],
        "tags": [
          "StakingService"
        ]
      }
    }
  },
  "definitions": {
    "apiActiveStake": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "format": "int64"
        },
        "FkWallet": {
          "type": "string",
          "format": "int64"
        },
        "Amount": {
          "type": "number",
          "format": "double"
        },
        "StakeStatus": {
          "type": "string"
        },
        "StartStakeTime": {
          "type": "string"
        },
        "UnstakeTime": {
          "type": "string"
        }
      }
    },
    "apiGetActiveStakesResponse": {
      "type": "object",
      "properties": {
        "actStake": {
          "$ref": "#/definitions/apiActiveStake"
        }
      }
    },
    "apiGetStakingHistory": {
      "type": "object",
      "properties": {
        "stakeAmount": {
          "type": "number",
          "format": "double"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "revMonth": {
          "type": "string"
        },
        "networkIncome": {
          "type": "number",
          "format": "double"
        },
        "monthlyRate": {
          "type": "number",
          "format": "double"
        },
        "revenue": {
          "type": "number",
          "format": "double"
        },
        "balance": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiStakeRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiStakeResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "apiStakingHistoryResponse": {
      "type": "object",
      "properties": {
        "stakingHist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiGetStakingHistory"
          }
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiStakingPercentageResponse": {
      "type": "object",
      "properties": {
        "stakingPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiUnstakeRequest": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiUnstakeResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
