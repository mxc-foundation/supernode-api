{
  "swagger": "2.0",
  "info": {
    "title": "lpwan-app-server/ui/gateway.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/gateways": {
      "get": {
        "summary": "List lists the gateways.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiListGatewayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of nodes to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Offset of the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "organizationID",
            "description": "ID of the organization for which to filter on, when left blank the\nresponse will return all gateways to which the user has access to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "search",
            "description": "Search on name or gateway MAC (optional).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      },
      "post": {
        "summary": "Create creates the given gateway.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiCreateGatewayRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways-loc": {
      "get": {
        "summary": "ListLocations lists the gateways locations.",
        "operationId": "ListLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiListGatewayLocationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/default-config/add": {
      "post": {
        "operationId": "InsertNewDefaultGatewayConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiInsertNewDefaultGatewayConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiInsertNewDefaultGatewayConfigRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/default-config/batch-reset": {
      "put": {
        "operationId": "BatchResetDefaultGatewatConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiBatchResetDefaultGatewatConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiBatchResetDefaultGatewatConfigRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/default-config/get": {
      "get": {
        "operationId": "GetDefaultGatewayConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGetDefaultGatewayConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/default-config/reset": {
      "put": {
        "operationId": "ResetDefaultGatewatConfigByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiResetDefaultGatewatConfigByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiResetDefaultGatewatConfigByIDRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/default-config/update": {
      "put": {
        "operationId": "UpdateDefaultGatewayConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiUpdateDefaultGatewayConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiUpdateDefaultGatewayConfigRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/getconfig/{gatewayId}": {
      "get": {
        "operationId": "GetGwConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGetGwConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "gatewayId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/getpassword/{gatewayId}": {
      "get": {
        "operationId": "GetGwPwd",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGetGwPwdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "gatewayId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sn",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/register": {
      "post": {
        "operationId": "Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiRegisterRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/set-auto-update/{gatewayId}": {
      "put": {
        "operationId": "SetAutoUpdateFirmware",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiSetAutoUpdateFirmwareResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "gatewayId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiSetAutoUpdateFirmwareRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/updateconfig/{gatewayId}": {
      "put": {
        "operationId": "UpdateGwConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiUpdateGwConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "gatewayId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiUpdateGwConfigRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/{gateway.id}": {
      "put": {
        "summary": "Update updates the gateway matching the given mac address.",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "gateway.id",
            "description": "Gateway ID (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiUpdateGatewayRequest"
            }
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/{gatewayID}/frames": {
      "get": {
        "summary": "StreamFrameLogs streams the uplink and downlink frame-logs for the given gateway ID.\nNotes:\n  * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.\n  * This endpoint does not work from a web-browser.",
        "operationId": "StreamFrameLogs",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/uiStreamGatewayFrameLogsResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of uiStreamGatewayFrameLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "gatewayID",
            "description": "Gateway ID (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/{gatewayID}/pings/last": {
      "get": {
        "summary": "GetLastPing returns the last emitted ping and gateways receiving this ping.",
        "operationId": "GetLastPing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGetLastPingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "gatewayID",
            "description": "Gateway ID (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/{gatewayID}/stats": {
      "get": {
        "summary": "GetStats lists the gateway stats given the query parameters.",
        "operationId": "GetStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGetGatewayStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "gatewayID",
            "description": "Gateway ID (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "interval",
            "description": "Aggregation interval.  One of \"second\", \"minute\", \"hour\", \"day\", \"week\",\n\"month\", \"quarter\", \"year\".  Case insensitive.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTimestamp",
            "description": "Timestamp to start from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTimestamp",
            "description": "Timestamp until to get from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    },
    "/api/gateways/{id}": {
      "get": {
        "summary": "Get returns the gateway for the requested mac address.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGetGatewayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Gateway ID (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      },
      "delete": {
        "summary": "Delete deletes the gateway matching the given mac address.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Gateway ID (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GatewayService"
        ]
      }
    }
  },
  "definitions": {
    "commonLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude."
        },
        "altitude": {
          "type": "number",
          "format": "double",
          "description": "Altitude."
        },
        "source": {
          "$ref": "#/definitions/commonLocationSource",
          "description": "Location source."
        },
        "accuracy": {
          "type": "integer",
          "format": "int64",
          "description": "Accuracy (in meters)."
        }
      }
    },
    "commonLocationSource": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GPS",
        "CONFIG",
        "GEO_RESOLVER"
      ],
      "default": "UNKNOWN",
      "description": " - UNKNOWN: Unknown.\n - GPS: GPS.\n - CONFIG: Manually configured.\n - GEO_RESOLVER: Geo resolver."
    },
    "commonModulation": {
      "type": "string",
      "enum": [
        "LORA",
        "FSK"
      ],
      "default": "LORA",
      "title": "- LORA: LoRa\n - FSK: FSK"
    },
    "gwDelayTimingInfo": {
      "type": "object",
      "properties": {
        "delay": {
          "type": "string",
          "description": "Delay (duration).\nThe delay will be added to the gateway internal timing, provided by the context object."
        }
      }
    },
    "gwDownlinkTiming": {
      "type": "string",
      "enum": [
        "IMMEDIATELY",
        "DELAY",
        "GPS_EPOCH"
      ],
      "default": "IMMEDIATELY",
      "description": " - IMMEDIATELY: Send the downlink immediately.\n - DELAY: Send downlink at the given delay (based on provided context).\n - GPS_EPOCH: Send at given GPS epoch value."
    },
    "gwFSKModulationInfo": {
      "type": "object",
      "properties": {
        "bandwidth": {
          "type": "integer",
          "format": "int64",
          "description": "Bandwidth."
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Bitrate."
        }
      }
    },
    "gwFineTimestampType": {
      "type": "string",
      "enum": [
        "NONE",
        "ENCRYPTED",
        "PLAIN"
      ],
      "default": "NONE",
      "description": " - NONE: No fine-timestamp available.\n - ENCRYPTED: Encrypted fine-timestamp.\n - PLAIN: Plain fine-timestamp."
    },
    "gwGPSEpochTimingInfo": {
      "type": "object",
      "properties": {
        "timeSinceGPSEpoch": {
          "type": "string",
          "description": "Duration since GPS Epoch."
        }
      }
    },
    "gwImmediatelyTimingInfo": {
      "type": "object"
    },
    "gwLoRaModulationInfo": {
      "type": "object",
      "properties": {
        "bandwidth": {
          "type": "integer",
          "format": "int64",
          "description": "Bandwidth."
        },
        "spreadingFactor": {
          "type": "integer",
          "format": "int64",
          "description": "Speading-factor."
        },
        "codeRate": {
          "type": "string",
          "description": "Code-rate."
        },
        "polarizationInversion": {
          "type": "boolean",
          "format": "boolean",
          "description": "Polarization inversion."
        }
      }
    },
    "gwPlainFineTimestamp": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Full timestamp."
        }
      }
    },
    "gwUplinkTXInfo": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "integer",
          "format": "int64",
          "description": "Frequency (Hz)."
        },
        "modulation": {
          "$ref": "#/definitions/commonModulation",
          "description": "Modulation."
        },
        "loRaModulationInfo": {
          "$ref": "#/definitions/gwLoRaModulationInfo",
          "description": "LoRa modulation information."
        },
        "fskModulationInfo": {
          "$ref": "#/definitions/gwFSKModulationInfo",
          "description": "FSK modulation information."
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpcCode": {
          "type": "integer",
          "format": "int32"
        },
        "httpCode": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "httpStatus": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uiBatchResetDefaultGatewatConfigRequest": {
      "type": "object",
      "properties": {
        "organizationList": {
          "type": "string"
        }
      }
    },
    "uiBatchResetDefaultGatewatConfigResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "uiCreateGatewayRequest": {
      "type": "object",
      "properties": {
        "gateway": {
          "$ref": "#/definitions/uiGateway",
          "description": "Gateway object to create."
        }
      }
    },
    "uiDownlinkFrameLog": {
      "type": "object",
      "properties": {
        "txInfo": {
          "$ref": "#/definitions/uiDownlinkTXInfo",
          "description": "TX information of the downlink."
        },
        "phyPayloadJSON": {
          "type": "string",
          "description": "LoRaWAN PHYPayload."
        }
      }
    },
    "uiDownlinkTXInfo": {
      "type": "object",
      "properties": {
        "gatewayID": {
          "type": "string",
          "description": "Gateway ID."
        },
        "downlinkID": {
          "type": "string",
          "description": "Downlink ID (UUID)."
        },
        "frequency": {
          "type": "integer",
          "format": "int64",
          "description": "TX frequency (in Hz)."
        },
        "power": {
          "type": "integer",
          "format": "int32",
          "description": "TX power (in dBm)."
        },
        "modulation": {
          "$ref": "#/definitions/commonModulation",
          "description": "Modulation."
        },
        "loraModulationInfo": {
          "$ref": "#/definitions/gwLoRaModulationInfo",
          "description": "LoRa modulation information."
        },
        "fskModulationInfo": {
          "$ref": "#/definitions/gwFSKModulationInfo",
          "description": "FSK modulation information."
        },
        "board": {
          "type": "integer",
          "format": "int64",
          "description": "The board identifier for emitting the frame."
        },
        "antenna": {
          "type": "integer",
          "format": "int64",
          "description": "The antenna identifier for emitting the frame."
        },
        "timing": {
          "$ref": "#/definitions/gwDownlinkTiming",
          "description": "Timing defines the downlink timing to use."
        },
        "immediatelyTimingInfo": {
          "$ref": "#/definitions/gwImmediatelyTimingInfo",
          "description": "Immediately timing information."
        },
        "delayTimingInfo": {
          "$ref": "#/definitions/gwDelayTimingInfo",
          "description": "Context based delay timing information."
        },
        "gpsEpochTimingInfo": {
          "$ref": "#/definitions/gwGPSEpochTimingInfo",
          "description": "GPS Epoch timing information."
        },
        "context": {
          "type": "string",
          "format": "byte",
          "description": "Gateway specific context.\nIn case of a Class-A downlink, this contains a copy of the uplink context."
        }
      },
      "description": "Same comment as above applies to this message."
    },
    "uiEncryptedFineTimestamp": {
      "type": "object",
      "properties": {
        "aesKeyIndex": {
          "type": "integer",
          "format": "int64",
          "description": "AES key index used for encrypting the fine timestamp."
        },
        "encryptedNS": {
          "type": "string",
          "format": "byte",
          "description": "Encrypted 'main' fine-timestamp (ns precision part of the timestamp)."
        },
        "fpgaID": {
          "type": "string",
          "description": "FPGA ID."
        }
      },
      "description": "this s a copy of gw.EncryptedFineTimestamp which the only change that\nthe fpga_id is of type string so that it can be returned in HEX format\ninstead of base64."
    },
    "uiGateway": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gateway ID (HEX encoded)."
        },
        "name": {
          "type": "string",
          "description": "Gateway name."
        },
        "description": {
          "type": "string",
          "description": "Gateway description."
        },
        "location": {
          "$ref": "#/definitions/commonLocation",
          "description": "Gateway location."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID to which the gateway belongs.\nThis can't be changed after creating the gateway."
        },
        "discoveryEnabled": {
          "type": "boolean",
          "format": "boolean",
          "description": "Set to true to enable gateway discovery."
        },
        "networkServerID": {
          "type": "string",
          "format": "int64",
          "description": "Network-server ID on which the gateway is provisioned."
        },
        "gatewayProfileID": {
          "type": "string",
          "description": "Gateway-profile ID (UUID string, optional)."
        },
        "boards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uiGatewayBoard"
          },
          "description": "Gateway boards configuration (optional).\nThis is (currently) only needed when the gateway supports the fine-timestamp\nand you you would like to add the FPGA ID to the gateway meta-data or would\nlike LPWAN Server to decrypt the fine-timestamp."
        }
      }
    },
    "uiGatewayBoard": {
      "type": "object",
      "properties": {
        "fpgaID": {
          "type": "string",
          "description": "FPGA ID of the gateway (HEX encoded) (optional)."
        },
        "fineTimestampKey": {
          "type": "string",
          "description": "Fine-timestamp AES decryption key (HEX encoded) (optional)."
        }
      }
    },
    "uiGatewayListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gateway ID (HEX encoded)."
        },
        "name": {
          "type": "string",
          "title": "A name for the gateway"
        },
        "description": {
          "type": "string",
          "title": "A description for the gateway"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Create timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        },
        "firstSeenAt": {
          "type": "string",
          "format": "date-time",
          "description": "First seen timestamp."
        },
        "lastSeenAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last seen timestamp."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID."
        },
        "networkServerID": {
          "type": "string",
          "format": "int64",
          "description": "Network-server ID."
        },
        "location": {
          "$ref": "#/definitions/commonLocation",
          "description": "Location."
        }
      }
    },
    "uiGatewayLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the gateway -90.0 to 90.0."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the gateway -180.0 to 180.0."
        },
        "altitude": {
          "type": "number",
          "format": "double",
          "description": "Altitude of the gateway in meters."
        }
      }
    },
    "uiGatewayLocationListItem": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/uiGatewayLocation",
          "description": "Location."
        }
      }
    },
    "uiGatewayStats": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the (aggregated) measurement."
        },
        "rxPacketsReceived": {
          "type": "integer",
          "format": "int32",
          "description": "Packets received by the gateway."
        },
        "rxPacketsReceivedOK": {
          "type": "integer",
          "format": "int32",
          "description": "Packets received by the gateway that passed the CRC check."
        },
        "txPacketsReceived": {
          "type": "integer",
          "format": "int32",
          "description": "Packets received by the gateway for transmission."
        },
        "txPacketsEmitted": {
          "type": "integer",
          "format": "int32",
          "description": "Packets transmitted by the gateway."
        }
      }
    },
    "uiGetDefaultGatewayConfigResponse": {
      "type": "object",
      "properties": {
        "defaultConfig": {
          "type": "string"
        }
      }
    },
    "uiGetGatewayResponse": {
      "type": "object",
      "properties": {
        "gateway": {
          "$ref": "#/definitions/uiGateway",
          "description": "Gateway object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        },
        "firstSeenAt": {
          "type": "string",
          "format": "date-time",
          "description": "First seen at timestamp."
        },
        "lastSeenAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last seen at timestamp."
        }
      }
    },
    "uiGetGatewayStatsResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uiGatewayStats"
          }
        }
      }
    },
    "uiGetGwConfigResponse": {
      "type": "object",
      "properties": {
        "conf": {
          "type": "string"
        }
      }
    },
    "uiGetGwPwdResponse": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "uiGetLastPingResponse": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "frequency": {
          "type": "integer",
          "format": "int64",
          "description": "Frequency (Hz)."
        },
        "dr": {
          "type": "integer",
          "format": "int64",
          "description": "Data-rate."
        },
        "pingRX": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uiPingRX"
          },
          "description": "Gateways and meta-data of reception."
        }
      }
    },
    "uiInsertNewDefaultGatewayConfigRequest": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "defaultConfig": {
          "type": "string"
        }
      }
    },
    "uiInsertNewDefaultGatewayConfigResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "uiListGatewayLocationsResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uiGatewayLocationListItem"
          },
          "description": "Nodes within this result-set."
        }
      }
    },
    "uiListGatewayResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of nodes available within the result-set."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uiGatewayListItem"
          },
          "description": "Nodes within this result-set."
        }
      }
    },
    "uiPingRX": {
      "type": "object",
      "properties": {
        "gatewayID": {
          "type": "string",
          "description": "Gateway ID (HEX encoded)."
        },
        "rssi": {
          "type": "integer",
          "format": "int32",
          "description": "RSSI."
        },
        "loRaSNR": {
          "type": "number",
          "format": "double",
          "description": "LoRa SNR."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the gateway -90.0 to 90.0."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the gateway -180.0 to 180.0."
        },
        "altitude": {
          "type": "number",
          "format": "double",
          "description": "Altitude of the gateway in meters."
        }
      }
    },
    "uiRegisterRequest": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string",
          "format": "int64"
        },
        "sn": {
          "type": "string"
        }
      }
    },
    "uiRegisterResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "uiResetDefaultGatewatConfigByIDRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "uiResetDefaultGatewatConfigByIDResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "uiSetAutoUpdateFirmwareRequest": {
      "type": "object",
      "properties": {
        "gatewayId": {
          "type": "string"
        },
        "autoUpdate": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "uiSetAutoUpdateFirmwareResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "uiStreamGatewayFrameLogsResponse": {
      "type": "object",
      "properties": {
        "uplinkFrame": {
          "$ref": "#/definitions/uiUplinkFrameLog",
          "description": "Contains an uplink frame."
        },
        "downlinkFrame": {
          "$ref": "#/definitions/uiDownlinkFrameLog",
          "description": "Contains a downlink frame."
        }
      }
    },
    "uiUpdateDefaultGatewayConfigRequest": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "defaultConfig": {
          "type": "string"
        }
      }
    },
    "uiUpdateDefaultGatewayConfigResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "uiUpdateGatewayRequest": {
      "type": "object",
      "properties": {
        "gateway": {
          "$ref": "#/definitions/uiGateway",
          "description": "Gateway object to update."
        }
      }
    },
    "uiUpdateGwConfigRequest": {
      "type": "object",
      "properties": {
        "gatewayId": {
          "type": "string"
        },
        "conf": {
          "type": "string"
        }
      }
    },
    "uiUpdateGwConfigResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "uiUplinkFrameLog": {
      "type": "object",
      "properties": {
        "txInfo": {
          "$ref": "#/definitions/gwUplinkTXInfo",
          "description": "TX information of the uplink."
        },
        "rxInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uiUplinkRXInfo"
          },
          "description": "RX information of the uplink."
        },
        "phyPayloadJSON": {
          "type": "string",
          "description": "LoRaWAN PHYPayload."
        }
      }
    },
    "uiUplinkRXInfo": {
      "type": "object",
      "properties": {
        "gatewayID": {
          "type": "string",
          "description": "Gateway ID."
        },
        "uplinkID": {
          "type": "string",
          "description": "Uplink ID (UUID)."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "RX time (only set when the gateway has a GPS module)."
        },
        "timeSinceGpsEpoch": {
          "type": "string",
          "description": "RX time since GPS epoch (only set when the gateway has a GPS module)."
        },
        "rssi": {
          "type": "integer",
          "format": "int32",
          "description": "RSSI."
        },
        "loraSnr": {
          "type": "number",
          "format": "double",
          "description": "LoRa SNR."
        },
        "channel": {
          "type": "integer",
          "format": "int64",
          "description": "Channel."
        },
        "rfChain": {
          "type": "integer",
          "format": "int64",
          "description": "RF Chain."
        },
        "board": {
          "type": "integer",
          "format": "int64",
          "description": "Board."
        },
        "antenna": {
          "type": "integer",
          "format": "int64",
          "description": "Antenna."
        },
        "location": {
          "$ref": "#/definitions/commonLocation",
          "description": "Location."
        },
        "fineTimestampType": {
          "$ref": "#/definitions/gwFineTimestampType",
          "description": "Fine-timestamp type."
        },
        "encryptedFineTimestamp": {
          "$ref": "#/definitions/uiEncryptedFineTimestamp",
          "description": "Encrypted fine-timestamp data."
        },
        "plainFineTimestamp": {
          "$ref": "#/definitions/gwPlainFineTimestamp",
          "description": "Plain fine-timestamp data."
        },
        "context": {
          "type": "string",
          "format": "byte",
          "description": "Gateway specific context."
        }
      },
      "description": "This is a copy of gw.UplinkRXInfo with the only change that the\ngateway_id is of type string so that we can return it as HEX encoded\ninstead of base64."
    }
  }
}
