{
  "swagger": "2.0",
  "info": {
    "title": "lpwan-app-server/ui/internal.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/internal/branding": {
      "get": {
        "summary": "Get the branding for the UI",
        "operationId": "Branding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiBrandingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/login": {
      "post": {
        "summary": "Log in a user",
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiLoginRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/profile": {
      "get": {
        "summary": "Get the current user's profile",
        "operationId": "Profile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/registration": {
      "post": {
        "operationId": "RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiRegisterUserRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/registration-confirm": {
      "post": {
        "operationId": "ConfirmRegistration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiConfirmRegistrationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiConfirmRegistrationRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/registration-finish": {
      "post": {
        "operationId": "FinishRegistration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiFinishRegistrationRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/search": {
      "get": {
        "summary": "Perform a global search.",
        "operationId": "GlobalSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGlobalSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "description": "Search query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Max number of results to return.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset offset of the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/totp-configuration": {
      "post": {
        "operationId": "GetTOTPConfiguration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGetTOTPConfigurationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiGetTOTPConfigurationRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/totp-disable": {
      "post": {
        "operationId": "DisableTOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiTOTPStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiTOTPStatusRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/totp-enable": {
      "post": {
        "operationId": "EnableTOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiTOTPStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiTOTPStatusRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/totp-recovery-codes": {
      "post": {
        "operationId": "GetRecoveryCodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGetRecoveryCodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiGetRecoveryCodesRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/totp-status": {
      "get": {
        "operationId": "GetTOTPStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiTOTPStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/verify-g-recaptcha": {
      "post": {
        "operationId": "GetVerifyingGoogleRecaptcha",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uiGoogleRecaptchaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uiGoogleRecaptchaRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uiBrandingResponse": {
      "type": "object",
      "properties": {
        "logo": {
          "type": "string",
          "description": "Logo html."
        },
        "registration": {
          "type": "string",
          "description": "Registration html."
        },
        "footer": {
          "type": "string",
          "description": "Footer html."
        },
        "logoPath": {
          "type": "string",
          "title": "Logo img path"
        }
      }
    },
    "uiConfirmRegistrationRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "uiConfirmRegistrationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32"
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean"
        },
        "isActive": {
          "type": "boolean",
          "format": "boolean"
        },
        "jwt": {
          "type": "string"
        }
      }
    },
    "uiFinishRegistrationRequest": {
      "type": "object",
      "properties": {
        "organizationName": {
          "type": "string"
        },
        "organizationDisplayName": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "uiGetRecoveryCodesRequest": {
      "type": "object",
      "properties": {
        "regenerate": {
          "type": "boolean",
          "format": "boolean",
          "title": "if true, then old recovery codes will be removed and new will be\ngenerated, otherwise the old codes will remain valid and will be returned"
        }
      }
    },
    "uiGetRecoveryCodesResponse": {
      "type": "object",
      "properties": {
        "recoveryCode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of recovery codes"
        }
      }
    },
    "uiGetTOTPConfigurationRequest": {
      "type": "object",
      "properties": {
        "qrCodeSize": {
          "type": "string",
          "format": "int64",
          "title": "the size of QR code image"
        }
      }
    },
    "uiGetTOTPConfigurationResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "otpauth:// url containing details of TOTP configuration"
        },
        "secret": {
          "type": "string",
          "title": "the secret encoded as a string of 32 characters"
        },
        "recoveryCode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of recovery codes"
        },
        "qrCode": {
          "type": "string",
          "title": "QR code base64 encoded in PNG format"
        }
      }
    },
    "uiGlobalSearchResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uiGlobalSearchResult"
          }
        }
      }
    },
    "uiGlobalSearchResult": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Record kind."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Search score."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization id."
        },
        "organizationName": {
          "type": "string",
          "description": "Organization name."
        },
        "applicationID": {
          "type": "string",
          "format": "int64",
          "description": "Application id."
        },
        "applicationName": {
          "type": "string",
          "description": "Application name."
        },
        "deviceDevEUI": {
          "type": "string",
          "description": "Device DevEUI (hex encoded)."
        },
        "deviceName": {
          "type": "string",
          "description": "Device name."
        },
        "gatewayMAC": {
          "type": "string",
          "description": "Gateway MAC (hex encoded)."
        },
        "gatewayName": {
          "type": "string",
          "description": "Gateway name."
        }
      }
    },
    "uiGoogleRecaptchaRequest": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string"
        },
        "response": {
          "type": "string"
        },
        "remoteip": {
          "type": "string"
        }
      }
    },
    "uiGoogleRecaptchaResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        },
        "challengeTs": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "errorCodes": {
          "type": "string"
        }
      }
    },
    "uiLanguage": {
      "type": "string",
      "enum": [
        "de",
        "en",
        "es",
        "fr",
        "ja",
        "ko",
        "nl",
        "ru",
        "zhCN",
        "zhTW"
      ],
      "default": "de"
    },
    "uiLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "password": {
          "type": "string",
          "description": "Password of the user."
        }
      }
    },
    "uiLoginResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string",
          "description": "The JWT tag to be used to access lora-app-server interfaces."
        }
      }
    },
    "uiOrganizationLink": {
      "type": "object",
      "properties": {
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID."
        },
        "organizationName": {
          "type": "string",
          "description": "Organization name."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is admin within the context of this organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags."
        },
        "isDeviceAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups)."
        },
        "isGatewayAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is able to modify gateways."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      },
      "description": "Defines an organization to which an user is associated."
    },
    "uiProfileResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/uiUser",
          "description": "User object."
        },
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uiOrganizationLink"
          },
          "description": "Organizations to which the user is associated."
        },
        "settings": {
          "$ref": "#/definitions/uiProfileSettings",
          "description": "Profile settings."
        }
      }
    },
    "uiProfileSettings": {
      "type": "object",
      "properties": {
        "disableAssignExistingUsers": {
          "type": "boolean",
          "format": "boolean",
          "description": "Existing users in the system can not be assigned to organizations and\napplication and can not be listed by non global admin users."
        }
      }
    },
    "uiRegisterUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "language": {
          "$ref": "#/definitions/uiLanguage"
        }
      }
    },
    "uiTOTPStatusRequest": {
      "type": "object"
    },
    "uiTOTPStatusResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "set to true if TOTP is enabled"
        }
      }
    },
    "uiUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "User ID.\nWill be set automatically on create."
        },
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "Set to true to make the user a global administrator."
        },
        "isActive": {
          "type": "boolean",
          "format": "boolean",
          "description": "Set to false to disable the user."
        },
        "email": {
          "type": "string",
          "description": "E-mail of the user."
        },
        "note": {
          "type": "string",
          "description": "Optional note to store with the user."
        }
      }
    }
  }
}
